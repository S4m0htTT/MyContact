openapi: 3.0.4
info:
  title: "Documentation API MyContact"
  description: "Documentation API MyContact"
  version: 1.0.0
servers:
  - url: http://localhost:5002/v1/api
  - url: https://mycontact-az5e.onrender.com/v1/api
tags:
  - name: User
    description: Requêtes sur les utilisateurs.
  - name: Contact
    description: Requêtes sur les contacts des utilisateurs.
paths:
  /auth/login:
    post:
      tags:
        - User
      summary: Connexion utilisateur
      description: Permet à un utilisateur de se connecter.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: Azerty123
              required:
                - email
                - password
      responses:
        200:
          description: Authentification réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: ok
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRob21hcy5oZW5yeUBlZnJlaS5uZXQiLCJpYXQiOjE3NTgxMDExNjksImV4cCI6MTc1ODE4NzU2OX0.AnmwfLBPWj6F2BnRnDPB8F9YQ-g4R14K0Xq38U1kmvU
        400:
          description: Champs manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 400
                  errors:
                    type: string
                    example: Invalid email or password.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid email or password.
        401:
          description: Identifiants incorrects
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 401
                  errors:
                    type: string
                    example: Invalid email or password.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid email or password.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
  /auth/register:
    post:
      tags:
        - User
      summary: Création d'un utilisateur
      description: Permet de créer un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  format: password
                  example: Azerty123
              required:
                - email
                - password
      responses:
        201:
          description: Création réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
                            example: user@example.com
                          password:
                            type: string
                            example: $2a$10$4zSGQQITcevNiaeaEXHimuQOmA8pguCPJPyKRH4zkKlQZjUkOQrOq
                          lastLogin:
                            type: string
                            nullable: true
                            example: null
                          createdAt:
                            type: string
                            example: 2025-09-17T09:41:17.833Z
                          updatedAt:
                            type: string
                            example: 2025-09-17T09:41:17.833Z
        400:
          description: Champs manquants
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 400
                  errors:
                    type: string
                    example: Invalid email or password.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Invalid email or password.
        409:
          description: Utilisateur déjà existant
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 409
                  errors:
                    type: string
                    example: User already exists.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: User with email user@example.com already exists.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
  /auth/me:
    get:
      tags:
        - User
      summary: Récupération des informations d'un utilisateur
      description: Permet de récupérer les informations d'un utilisateur
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      responses:
        200:
          description: Récupération réussi
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          email:
                            type: string
                            format: email
                            example: user@example.com
                          password:
                            type: string
                            example: $2a$10$4zSGQQITcevNiaeaEXHimuQOmA8pguCPJPyKRH4zkKlQZjUkOQrOq
                          lastLogin:
                            type: string
                            nullable: true
                            example: 2025-09-17T09:42:32.833Z
                          createdAt:
                            type: string
                            example: 2025-09-17T09:41:17.833Z
                          updatedAt:
                            type: string
                            example: 2025-09-17T09:41:17.833Z
        404:
          description: Utilisateur non-existant
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: User nor found.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: User with email user@example.com not found.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
  /contact:
    post:
      tags:
        - Contact
      summary: Création d'un nouveau contact
      description: Permet de créer un contact pour l'utilisateur connecté
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - firstName
                - lastName
                - phoneNumber
              properties:
                firstName:
                  type: string
                  example: Thomas
                lastName:
                  type: string
                  example: Dupont
                phoneNumber:
                  type: string
                  example: "+33123456789"
      responses:
        201:
          description: Contact créé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 201
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      contact:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 652f1c5e2f8a4b0012a3d9e1
                          firstName:
                            type: string
                            example: Thomas
                          lastName:
                            type: string
                            example: Dupont
                          phoneNumber:
                            type: string
                            example: "+33123456789"
                          user:
                            type: string
                            example: 652f1c5e2f8a4b0012a3d9d0
                          createdAt:
                            type: string
                            example: 2025-10-06T09:41:17.833Z
                          updatedAt:
                            type: string
                            example: 2025-10-06T09:41:17.833Z
        404:
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: User nor found.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: User with email user@example.com not found.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
  /contacts:
    get:
      tags:
        - Contact
      summary: Récupération des contacts de l'utilisateur
      description: Permet de récupérer tous les contacts liés à l'utilisateur connecté
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
      responses:
        200:
          description: Liste des contacts récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      contact:
                        type: array
                        items:
                          type: object
                          properties:
                            _id:
                              type: string
                              example: 652f1c5e2f8a4b0012a3d9e1
                            firstName:
                              type: string
                              example: Thomas
                            lastName:
                              type: string
                              example: Dupont
                            phoneNumber:
                              type: string
                              example: "+33123456789"
                            user:
                              type: string
                              example: 652f1c5e2f8a4b0012a3d9d0
                            createdAt:
                              type: string
                              example: 2025-10-06T09:41:17.833Z
                            updatedAt:
                              type: string
                              example: 2025-10-06T09:41:17.833Z
        404:
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: User not found.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: User with email user@example.com not found.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
  /contact/{id}:
    get:
      tags:
        - Contact
      summary: Récupération d'un seul contact
      description: Permet de récupérer un seul contact
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        - in: path
          required: true
          name: id
          schema:
            type: string
            example: 68e36e1cade91cf8a8795150
      responses:
        200:
          description: Contact récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      contact:
                        type: object
                        properties:
                          _id:
                            type: string
                            example: 652f1c5e2f8a4b0012a3d9e1
                          firstName:
                            type: string
                            example: Thomas
                          lastName:
                            type: string
                            example: Dupont
                          phoneNumber:
                            type: string
                            example: "+33123456789"
                          user:
                            type: string
                            example: 652f1c5e2f8a4b0012a3d9d0
                          createdAt:
                            type: string
                            example: 2025-10-06T09:41:17.833Z
                          updatedAt:
                            type: string
                            example: 2025-10-06T09:41:17.833Z
        404:
          description: Contact non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: Contact not found.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Could not find contact with id 68e36e1cade91cf8a8795150.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
    patch:
      tags:
        - Contact
      summary: Mise à jour d'un contact
      description: Permet de modifier les informations d'un contact existant
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        - in: path
          required: true
          name: id
          schema:
            type: string
            example: 652f1c5e2f8a4b0012a3d9e1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: Thomas
                lastName:
                  type: string
                  example: Dupont
                phoneNumber:
                  type: string
                  example: "+33123456789"
      responses:
        200:
          description: Contact mis à jour avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Contact updated successfully.
                      updatedFields:
                        type: object
                        additionalProperties: true
        403:
          description: Action non autorisée
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 403
                  errors:
                    type: string
                    example:
                      Access denied: this contact does not belong to the authenticated user.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: You are not authorized to perform this action on this contact.
        404:
          description: Contact non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: Could not find contact
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Could not find contact with id 652f1c5e2f8a4b0012a3d9e1
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
    delete:
      tags:
        - Contact
      summary: Suppression d'un contact
      description: Permet de supprimer un contact existant
      parameters:
        - in: header
          required: true
          name: Authorization
          schema:
            type: string
            example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        - in: path
          required: true
          name: id
          schema:
            type: string
            example: 652f1c5e2f8a4b0012a3d9e1
      responses:
        200:
          description: Contact supprimé avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  statusCode:
                    type: number
                    example: 200
                  errors:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Contact deleted successfully.
        403:
          description: Action non autorisée
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 403
                  errors:
                    type: string
                    example:
                      Access denied: this contact does not belong to the authenticated user.
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: You are not authorized to perform this action on this contact.
        404:
          description: Contact non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 404
                  errors:
                    type: string
                    example: Could not find contact
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Could not find contact with id 652f1c5e2f8a4b0012a3d9e1
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  statusCode:
                    type: number
                    example: 500
                  errors:
                    type: string
                    example: string
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: string
